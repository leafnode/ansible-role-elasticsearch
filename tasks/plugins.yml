---

- name: Create plugin path
  file:
    path: '{{ elasticsearch_path_plugins }}'
    state: 'directory'

- name: Install elasticsearch plugins
  command: "bin/plugin install {{ item.name }}"
  args:
    chdir: "{{ elasticsearch_path_home }}"
  when: elasticsearch_plugins is defined
  register: plugin_installed
  failed_when:
    - '"Failed to install" in plugin_installed.stderr'
  changed_when:
    - '"Installed" in plugin_installed.stdout'
  with_items: "{{ elasticsearch_plugins }}"
  notify: [ 'Restart Elasticsearch' ]

- name: debug
  debug:
    var: plugin_installed
#- name: Detect installed plugins
#  shell: 'bin/plugin {{ "-l" if (elasticsearch__version_major | int == 1) else "list" }}'
#  args:
#    chdir: '{{ elasticsearch_path_home }}'
#  changed_when: False
#  register: elasticsearch_register_installed_plugins
#
#- name: Delete plugins
#  shell: 'bin/plugin {{ "-s -r" if (elasticsearch__version_major | int == 1) else "remove" }} {{ item.name }}'
#  args:
#    chdir: '{{ elasticsearch_path_home }}'
#  when: ("delete" in item and item.delete) and
#        (item.name in elasticsearch_register_installed_plugins.stdout or
#         item.name.split('/')[1] in elasticsearch_register_installed_plugins.stdout)
#  with_flattened:
#    - '{{ elasticsearch_plugins }}'
#    - '{{ [ { "name": "discovery-multicast", "delete": True } ]
#          if ((elasticsearch__version_major | int == 2) and not elasticsearch_discovery_multicast_enabled|d(False))
#          else [] }}'
#  notify: [ 'Restart Elasticsearch' ]
#
#- name: Install plugins by name
#  shell: 'bin/plugin {{ "-i" if (elasticsearch__version_major | int == 1) else "install" }} {{ item.name }}'
#  args:
#    chdir: '{{ elasticsearch_path_home }}'
#  when: (item.url is undefined or not item.url) and
#        (item.delete is undefined or not item.delete) and
#        not item.name.split('/')[1] in elasticsearch_register_installed_plugins.stdout
#  with_flattened:
#    - '{{ elasticsearch_plugins }}'
#    - '{{ [ { "name": "default/discovery-multicast" } ]
#          if ((elasticsearch__version_major | int == 2) and elasticsearch_discovery_multicast_enabled|d(False))
#          else [] }}'
#  notify: [ 'Restart Elasticsearch' ]
#
#- name: Install plugins by url
#  shell: bin/plugin -i {{ item.name }} -u {{ item.url }}
#  args:
#    chdir: '{{ elasticsearch_path_home }}'
#  when: item.url is defined and item.url and
#        (item.delete is undefined or not item.delete) and
#        not item.name in elasticsearch_register_installed_plugins.stdout
#  with_items: '{{ elasticsearch_plugins }}'
#  notify: [ 'Restart Elasticsearch' ]
